#N canvas 959 149 809 689 12;
#X obj 289 204 f 0;
#X obj 318 246 f;
#X obj 318 268 t b f;
#X obj 289 268 f;
#X obj 289 302 ==;
#X obj 289 392 sel 1;
#X obj 196 441 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 348 441 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 318 205 + 1;
#X obj 173 204 f 0;
#X obj 202 246 f;
#X obj 202 268 t b f;
#X obj 173 268 f;
#X obj 173 302 ==;
#X obj 173 392 sel 1;
#X obj 202 204 - 1;
#X msg 196 422 0;
#X msg 157 422 1;
#X msg 271 422 0;
#X msg 309 421 1;
#X obj 220 392 loadbang;
#X obj 319 225 del 1;
#X obj 204 224 del 1;
#X obj 215 154 spigot;
#X obj 254 134 r bypass;
#X text 61 325 check if value decreased or increased;
#X text 485 287 send bang for each change;
#X text 529 182 for one rotation step;
#X text 531 165 prevent multiple triggers;
#X text 367 439 send 1 if increased;
#X text 52 441 send 1 if decreased;
#X obj 196 461 s -\$1/1e;
#X obj 196 483 s -\$1/2e;
#X obj 196 505 s -\$1/2.1e;
#X obj 196 527 s -\$1/2.2e;
#X obj 196 550 s -\$1/3e;
#X obj 196 571 s -\$1/4e;
#X obj 348 461 s +\$1/1e;
#X obj 348 484 s +\$1/2e;
#X obj 348 506 s +\$1/2.1e;
#X obj 348 528 s +\$1/2.2e;
#X obj 348 549 s +\$1/3e;
#X obj 348 570 s +\$1/4e;
#X text 44 595 createa a negative (-) and positive (+) encoder (e)
send for each fx number, f 76;
#X text 527 223 receive touch value from GUI;
#X text 520 237 (this shoud not be debounced);
#X obj 453 227 r touch\$1;
#X obj 439 286 s \$1v;
#X obj 215 94 receive encoder\$1;
#X text 38 12 Receive and interpret value of the initialized encoder
(\$1) from the customized render.cpp file., f 96;
#X text 40 134 block signal if bypass is off;
#X obj 439 173 debounce 25;
#X floatatom 357 132 5 0 0 0 - - -;
#X text 38 48 https://learn.bela.io/tutorials/pure-data/advanced/custom-render/
, f 65;
#X text 343 94 receive encoder value from customized render.cpp file.
, f 96;
#X text 38 31 Detailed information on combining Pure Data and C++ at:
;
#X text 115 612 (each pair is received by the matching encoder abstraction)
;
#X connect 0 0 8 0;
#X connect 0 0 3 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 2 1 4 1;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 18 0;
#X connect 5 0 19 0;
#X connect 6 0 31 0;
#X connect 6 0 32 0;
#X connect 6 0 33 0;
#X connect 6 0 34 0;
#X connect 6 0 35 0;
#X connect 6 0 36 0;
#X connect 7 0 37 0;
#X connect 7 0 38 0;
#X connect 7 0 39 0;
#X connect 7 0 40 0;
#X connect 7 0 41 0;
#X connect 7 0 42 0;
#X connect 8 0 0 1;
#X connect 8 0 1 1;
#X connect 8 0 21 0;
#X connect 9 0 12 0;
#X connect 9 0 15 0;
#X connect 10 0 11 0;
#X connect 11 0 12 0;
#X connect 11 1 13 1;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 14 0 16 0;
#X connect 14 0 17 0;
#X connect 15 0 9 1;
#X connect 15 0 10 1;
#X connect 15 0 22 0;
#X connect 16 0 7 0;
#X connect 17 0 6 0;
#X connect 18 0 6 0;
#X connect 19 0 7 0;
#X connect 20 0 6 0;
#X connect 20 0 7 0;
#X connect 21 0 1 0;
#X connect 22 0 10 0;
#X connect 23 0 9 0;
#X connect 23 0 0 0;
#X connect 23 0 51 0;
#X connect 24 0 23 1;
#X connect 46 0 47 0;
#X connect 48 0 23 0;
#X connect 51 0 47 0;
#X connect 52 0 51 0;
#X connect 52 0 0 0;
#X connect 52 0 9 0;
